import { getInput, setFailed, setOutput } from "@actions/core";
import { context } from "@actions/github";
import { tangleRelease } from "./core";
import { IConfig } from "./models/IConfig";

if (require.main === module) {
    console.log("Tangle Release Startup");

    const releaseTagName = getInput("tag_name", { required: true });
    const comment = getInput("comment", { required: false });

    const { owner, repo } = context.repo;

    const envConfig: IConfig = {
        githubToken: process.env.GITHUB_TOKEN,
        tangleExplorer: process.env.IOTA_TANGLE_EXPLORER,
        node: process.env.IOTA_NODE,
        depth: process.env.IOTA_DEPTH,
        mwm: process.env.IOTA_MWM,
        seed: process.env.IOTA_SEED,
        tag: process.env.IOTA_TAG,
        addressIndex: process.env.IOTA_ADDRESS_INDEX,
        releaseTagName,
        comment,
        owner,
        repository: repo
    };

    tangleRelease(envConfig)
        .then(transactionDetails => {
            setOutput("tx_hash", transactionDetails.hash);
            setOutput("tx_explore_url", transactionDetails.url);
            console.log("Complete");
        })
        .catch(err => {
            setFailed(err.message);
            console.log("Failed");
            console.log(err);
        });
}
