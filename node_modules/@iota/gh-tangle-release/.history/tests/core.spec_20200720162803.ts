import { sanitizeInput } from "../src/core";
import { IConfig } from "../src/models/IConfig";

describe("Tangle Release", () => {
    afterEach(() => {
        jest.clearAllMocks();
    });

    test("No GITHUB_TOKEN", async () => {
        const config: Partial<IConfig> = {};
        expect(sanitizeInput(config)).toThrow("You must provide the GitHub token setting");
    });

    test("No owner", async () => {
        const config: Partial<IConfig> = {
            githubToken: "aaa"
        };
        expect(sanitizeInput(config)).toThrow("You must provide the owner setting");
    });

    test("No repository", async () => {
        const config: Partial<IConfig> = {
            githubToken: "aaa",
            owner: "abc"
        };
        expect(sanitizeInput(config)).toThrow("You must provide the repository setting");
    });

    test("No releaseTagName", async () => {
        const config: Partial<IConfig> = {
            githubToken: "aaa",
            owner: "abc",
            repository: "repo1/app1"
        };
        expect(sanitizeInput(config)).toThrow("You must provide the releaseTagName setting");
    });

    test("No seed", async () => {
        const config: Partial<IConfig> = {
            githubToken: "aaa",
            owner: "abc",
            repository: "repo1/app1",
            releaseTagName: "v1"
        };
        expect(sanitizeInput(config)).toThrow("You must provide the seed setting");
    });

    test("Bad GH Credentials", async () => {
        const config: Partial<IConfig> = {
            githubToken: "aaa",
            owner: "abc",
            repository: "repo1/app1",
            releaseTagName: "v1",
            seed: "A".repeat(81)
        };
        expect(sanitizeInput(config)).toThrow("Bad credentials");
    });
});
