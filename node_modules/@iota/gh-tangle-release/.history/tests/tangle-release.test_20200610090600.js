const core = require('@actions/core');
const run = require('../src/tangle-release');

describe('Tangle Release', () => {
  let setFailedMock;
  beforeEach(() => {
    jest.spyOn(console, 'log').mockImplementation();
    setFailedMock = jest.spyOn(core, 'setFailed');
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  test('No IOTA_SEED', async () => {
    await run();
    expect(setFailedMock).toHaveBeenCalledWith('You must provide the IOTA_SEED env variable');
  });

  test('No owner/repo', async () => {
    process.env.IOTA_SEED = 'A'.repeat(81);
    await run();
    expect(setFailedMock).toHaveBeenCalledWith(
      "context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'"
    );
  });

  test('No tag_name', async () => {
    process.env.IOTA_SEED = 'A'.repeat(81);
    process.env.GITHUB_REPOSITORY = 'repo1/app1';
    await run();
    expect(setFailedMock).toHaveBeenCalledWith('Input required and not supplied: tag_name');
  });
});
